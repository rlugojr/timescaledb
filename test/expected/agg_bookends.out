\ir include/create_single_db.sql
SET client_min_messages = WARNING;
DROP DATABASE IF EXISTS single;
SET client_min_messages = NOTICE;
CREATE DATABASE single;
\c single
CREATE EXTENSION IF NOT EXISTS timescaledb CASCADE;
psql:include/create_single_db.sql:7: NOTICE:  installing required extension "postgres_fdw"
SELECT setup_timescaledb(hostname => 'fakehost'); -- fakehost makes sure there is no network connection
 setup_timescaledb 
-------------------
 
(1 row)

CREATE TABLE "btest"(time timestamp, time_alt timestamp, gp INTEGER, temp float, strid TEXT DEFAULT 'testing');
SELECT create_hypertable('"btest"', 'time');
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "btest" VALUES('2017-01-20T09:00:01', '2017-01-20T10:00:00', 1, 22.5);
INSERT INTO "btest" VALUES('2017-01-20T09:00:21', '2017-01-20T09:00:59', 1, 21.2);
INSERT INTO "btest" VALUES('2017-01-20T09:00:47', '2017-01-20T09:00:58', 1, 25.1);
INSERT INTO "btest" VALUES('2017-01-20T09:00:02', '2017-01-20T09:00:57', 2, 35.5);
INSERT INTO "btest" VALUES('2017-01-20T09:00:21', '2017-01-20T09:00:56', 2, 30.2);
--TOASTED;
INSERT INTO "btest" VALUES('2017-01-20T09:00:43', '2017-01-20T09:00:55', 2, 20.1, repeat('xyz', 1000000) );
SELECT time, gp, temp FROM btest ORDER BY time;
           time           | gp | temp 
--------------------------+----+------
 Fri Jan 20 09:00:01 2017 |  1 | 22.5
 Fri Jan 20 09:00:02 2017 |  2 | 35.5
 Fri Jan 20 09:00:21 2017 |  1 | 21.2
 Fri Jan 20 09:00:21 2017 |  2 | 30.2
 Fri Jan 20 09:00:43 2017 |  2 | 20.1
 Fri Jan 20 09:00:47 2017 |  1 | 25.1
(6 rows)

SELECT last(temp, time) FROM "btest";
 last 
------
 25.1
(1 row)

SELECT first(temp, time) FROM "btest";
 first 
-------
  22.5
(1 row)

SELECT last(temp, time_alt) FROM "btest";
 last 
------
 22.5
(1 row)

SELECT first(temp, time_alt) FROM "btest";
 first 
-------
  20.1
(1 row)

SELECT gp, last(temp, time) FROM "btest" GROUP BY gp;
 gp | last 
----+------
  1 | 25.1
  2 | 20.1
(2 rows)

SELECT gp, first(temp, time) FROM "btest" GROUP BY gp;
 gp | first 
----+-------
  1 |  22.5
  2 |  35.5
(2 rows)

SELECT gp, first("btest", time) FROM "btest" GROUP BY gp;
 gp |                                 first                                  
----+------------------------------------------------------------------------
  1 | ("Fri Jan 20 09:00:01 2017","Fri Jan 20 10:00:00 2017",1,22.5,testing)
  2 | ("Fri Jan 20 09:00:02 2017","Fri Jan 20 09:00:57 2017",2,35.5,testing)
(2 rows)

--check toasted col
SELECT gp, left(last(strid, time), 10) FROM "btest" GROUP BY gp;
 gp |    left    
----+------------
  1 | testing
  2 | xyzxyzxyzx
(2 rows)

CREATE TABLE test (i int, j double precision);
--has to be big enough to force at least 2 workers below.
INSERT INTO test SELECT x, x+0.1 FROM generate_series(1,1000000) AS x;
SET force_parallel_mode = 'on';
SET max_parallel_workers_per_gather = 4;
EXPLAIN SELECT first(i, j) FROM "test";
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=12150.10..12150.11 rows=1 width=4)
   ->  Gather  (cost=12149.88..12150.09 rows=2 width=32)
         Workers Planned: 2
         ->  Partial Aggregate  (cost=11149.88..11149.89 rows=1 width=32)
               ->  Parallel Seq Scan on test  (cost=0.00..10001.10 rows=459510 width=12)
(5 rows)

SELECT first(i, j) FROM "test";
 first 
-------
     1
(1 row)

EXPLAIN SELECT last(i, j) FROM "test";
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=12150.10..12150.11 rows=1 width=4)
   ->  Gather  (cost=12149.88..12150.09 rows=2 width=32)
         Workers Planned: 2
         ->  Partial Aggregate  (cost=11149.88..11149.89 rows=1 width=32)
               ->  Parallel Seq Scan on test  (cost=0.00..10001.10 rows=459510 width=12)
(5 rows)

SELECT last(i, j) FROM "test";
  last   
---------
 1000000
(1 row)

